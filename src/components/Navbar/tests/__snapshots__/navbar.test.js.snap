// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar Components Container has correct default styles 1`] = `
.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  background-color: #5d9cec;
}

<styled.nav
  theme={
    Object {
      "color": Object {
        "black": "#000",
        "darkGreen": "#37bc9b",
        "darkGrey": "#aab2bd",
        "darkRed": "#da4453",
        "lightGreen": "#48cfad",
        "lightGrey": "#ccd1d9",
        "lightRed": "#ed5565",
        "primary": "#5d9cec",
        "secondary": "#4a89dc",
        "white": "#fff",
      },
      "layout": Object {
        "maxWidth": "62.5rem",
        "minWidth": "25rem",
      },
    }
  }
>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  background-color: ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.nav",
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "nav",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    theme={
      Object {
        "color": Object {
          "black": "#000",
          "darkGreen": "#37bc9b",
          "darkGrey": "#aab2bd",
          "darkRed": "#da4453",
          "lightGreen": "#48cfad",
          "lightGrey": "#ccd1d9",
          "lightRed": "#ed5565",
          "primary": "#5d9cec",
          "secondary": "#4a89dc",
          "white": "#fff",
        },
        "layout": Object {
          "maxWidth": "62.5rem",
          "minWidth": "25rem",
        },
      }
    }
  >
    <nav
      className="c0"
    />
  </StyledComponent>
</styled.nav>
`;

exports[`Navbar Components Content has correct default styles 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

@media (min-width:62.5rem) {
  .c0 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

<styled.div
  theme={
    Object {
      "color": Object {
        "black": "#000",
        "darkGreen": "#37bc9b",
        "darkGrey": "#aab2bd",
        "darkRed": "#da4453",
        "lightGreen": "#48cfad",
        "lightGrey": "#ccd1d9",
        "lightRed": "#ed5565",
        "primary": "#5d9cec",
        "secondary": "#4a89dc",
        "white": "#fff",
      },
      "layout": Object {
        "maxWidth": "62.5rem",
        "minWidth": "25rem",
      },
    }
  }
>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bxivhb",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  align-items: center;
  width: 100%;

  ",
            "@media (min-width: 62.5rem)",
            " {
    flex-direction: row;
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-bxivhb",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    theme={
      Object {
        "color": Object {
          "black": "#000",
          "darkGreen": "#37bc9b",
          "darkGrey": "#aab2bd",
          "darkRed": "#da4453",
          "lightGreen": "#48cfad",
          "lightGrey": "#ccd1d9",
          "lightRed": "#ed5565",
          "primary": "#5d9cec",
          "secondary": "#4a89dc",
          "white": "#fff",
        },
        "layout": Object {
          "maxWidth": "62.5rem",
          "minWidth": "25rem",
        },
      }
    }
  >
    <div
      className="c0"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Navbar Components Links has correct default styles 1`] = `
.c0 {
  display: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  top: 60px;
  width: 100%;
}

@media (min-width:62.5rem) {
  .c0 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    background-color: transparent;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

<styled.div
  theme={
    Object {
      "color": Object {
        "black": "#000",
        "darkGreen": "#37bc9b",
        "darkGrey": "#aab2bd",
        "darkRed": "#da4453",
        "lightGreen": "#48cfad",
        "lightGrey": "#ccd1d9",
        "lightRed": "#ed5565",
        "primary": "#5d9cec",
        "secondary": "#4a89dc",
        "white": "#fff",
      },
      "layout": Object {
        "maxWidth": "62.5rem",
        "minWidth": "25rem",
      },
    }
  }
>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: ",
            [Function],
            ";
  flex-direction: column;
  top: 60px;
  width: 100%;

  ",
            "@media (min-width: 62.5rem)",
            " {
    display: flex;
    background-color: transparent;
    flex-direction: row;
  }
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    theme={
      Object {
        "color": Object {
          "black": "#000",
          "darkGreen": "#37bc9b",
          "darkGrey": "#aab2bd",
          "darkRed": "#da4453",
          "lightGreen": "#48cfad",
          "lightGrey": "#ccd1d9",
          "lightRed": "#ed5565",
          "primary": "#5d9cec",
          "secondary": "#4a89dc",
          "white": "#fff",
        },
        "layout": Object {
          "maxWidth": "62.5rem",
          "minWidth": "25rem",
        },
      }
    }
  >
    <div
      className="c0"
    />
  </StyledComponent>
</styled.div>
`;

exports[`Navbar Components Navbar renders with all props 1`] = `
.c5 {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin: 14px;
  width: 2rem;
  height: 2rem;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: 0.25s ease;
  transition: 0.25s ease;
  cursor: pointer;
  display: block;
}

.c5 span:nth-child(1) {
  top: 0;
}

.c5 span:nth-child(2),
.c5 span:nth-child(3) {
  top: 0.6rem;
}

.c5 span:nth-child(4) {
  top: 1.2rem;
}

.c6 {
  display: block;
  position: absolute;
  border-radius: 1.6rem;
  height: 0.2rem;
  width: 100%;
  opacity: 1;
  left: 0;
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
  background: #fff;
}

.c0 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  background-color: #5d9cec;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c2 {
  display: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  top: 60px;
  width: 100%;
}

.c4 {
  display: block;
  color: #fff;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 20px 15px;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  font-size: 14px;
  background-color: transparent;
}

.c4:active,
.c4:hover {
  background-color: #4a89dc;
}

.c3 {
  display: block;
  color: #fff;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 20px 15px;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  font-size: 14px;
  background-color: #4a89dc;
}

.c3:active,
.c3:hover {
  background-color: #4a89dc;
}

@media (min-width:62.5rem) {
  .c5 {
    display: none;
  }
}

@media (min-width:48rem) {
  .c6 {
    background: #fff;
  }
}

@media (min-width:62.5rem) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:62.5rem) {
  .c2 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    background-color: transparent;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:48rem) {
  .c4 {
    font-size: 16px;
    padding: 20px 25px;
  }
}

@media (min-width:48rem) {
  .c3 {
    font-size: 16px;
    padding: 20px 25px;
  }
}

<ThemeProvider
  theme={
    Object {
      "color": Object {
        "black": "#000",
        "darkGreen": "#37bc9b",
        "darkGrey": "#aab2bd",
        "darkRed": "#da4453",
        "lightGreen": "#48cfad",
        "lightGrey": "#ccd1d9",
        "lightRed": "#ed5565",
        "primary": "#5d9cec",
        "secondary": "#4a89dc",
        "white": "#fff",
      },
      "layout": Object {
        "maxWidth": "62.5rem",
        "minWidth": "25rem",
      },
    }
  }
>
  <Navbar
    activeRoute="/"
    isOpen={true}
    links={
      Array [
        Object {
          "id": 1,
          "label": "Home",
          "to": "/",
        },
        Object {
          "id": 2,
          "label": "First",
          "to": "/first",
        },
        Object {
          "id": 3,
          "label": "Second",
          "to": "/second",
        },
      ]
    }
    toggleOpen={[Function]}
  >
    <styled.nav>
      <StyledComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  background-color: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.nav",
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "nav",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <nav
          className="c0"
        >
          <styled.div>
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  display: flex;
  flex-direction: column-reverse;
  justify-content: space-between;
  align-items: center;
  width: 100%;

  ",
                      "@media (min-width: 62.5rem)",
                      " {
    flex-direction: row;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <styled.div
                  isOpen={false}
                >
                  <StyledComponent
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: ",
                            [Function],
                            ";
  flex-direction: column;
  top: 60px;
  width: 100%;

  ",
                            "@media (min-width: 62.5rem)",
                            " {
    display: flex;
    background-color: transparent;
    flex-direction: row;
  }
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isOpen={false}
                  >
                    <div
                      className="c2"
                    >
                      <Styled(mockConstructor)
                        isActive={true}
                        key="1"
                        onClick={[Function]}
                        to="/"
                      >
                        <StyledComponent
                          forwardedClass={
                            [MockFunction] {
                              "calls": Array [
                                Array [
                                  Object {
                                    "className": "sc-EHOje c4",
                                    "theme": Object {
                                      "color": Object {
                                        "black": "#000",
                                        "darkGreen": "#37bc9b",
                                        "darkGrey": "#aab2bd",
                                        "darkRed": "#da4453",
                                        "lightGreen": "#48cfad",
                                        "lightGrey": "#ccd1d9",
                                        "lightRed": "#ed5565",
                                        "primary": "#5d9cec",
                                        "secondary": "#4a89dc",
                                        "white": "#fff",
                                      },
                                      "layout": Object {
                                        "maxWidth": "62.5rem",
                                        "minWidth": "25rem",
                                      },
                                    },
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Home",
                                    "className": "sc-EHOje c3",
                                    "isActive": true,
                                    "onClick": [Function],
                                    "to": "/",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "First",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/first",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Second",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/second",
                                  },
                                  Object {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                              ],
                            }
                          }
                          forwardedRef={null}
                          isActive={true}
                          onClick={[Function]}
                          to="/"
                        >
                          <mockConstructor
                            className="c3"
                            isActive={true}
                            onClick={[Function]}
                            to="/"
                          >
                            <span>
                              mock link
                            </span>
                          </mockConstructor>
                        </StyledComponent>
                      </Styled(mockConstructor)>
                      <Styled(mockConstructor)
                        isActive={false}
                        key="2"
                        onClick={[Function]}
                        to="/first"
                      >
                        <StyledComponent
                          forwardedClass={
                            [MockFunction] {
                              "calls": Array [
                                Array [
                                  Object {
                                    "className": "sc-EHOje c4",
                                    "theme": Object {
                                      "color": Object {
                                        "black": "#000",
                                        "darkGreen": "#37bc9b",
                                        "darkGrey": "#aab2bd",
                                        "darkRed": "#da4453",
                                        "lightGreen": "#48cfad",
                                        "lightGrey": "#ccd1d9",
                                        "lightRed": "#ed5565",
                                        "primary": "#5d9cec",
                                        "secondary": "#4a89dc",
                                        "white": "#fff",
                                      },
                                      "layout": Object {
                                        "maxWidth": "62.5rem",
                                        "minWidth": "25rem",
                                      },
                                    },
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Home",
                                    "className": "sc-EHOje c3",
                                    "isActive": true,
                                    "onClick": [Function],
                                    "to": "/",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "First",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/first",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Second",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/second",
                                  },
                                  Object {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                              ],
                            }
                          }
                          forwardedRef={null}
                          isActive={false}
                          onClick={[Function]}
                          to="/first"
                        >
                          <mockConstructor
                            className="c4"
                            isActive={false}
                            onClick={[Function]}
                            to="/first"
                          >
                            <span>
                              mock link
                            </span>
                          </mockConstructor>
                        </StyledComponent>
                      </Styled(mockConstructor)>
                      <Styled(mockConstructor)
                        isActive={false}
                        key="3"
                        onClick={[Function]}
                        to="/second"
                      >
                        <StyledComponent
                          forwardedClass={
                            [MockFunction] {
                              "calls": Array [
                                Array [
                                  Object {
                                    "className": "sc-EHOje c4",
                                    "theme": Object {
                                      "color": Object {
                                        "black": "#000",
                                        "darkGreen": "#37bc9b",
                                        "darkGrey": "#aab2bd",
                                        "darkRed": "#da4453",
                                        "lightGreen": "#48cfad",
                                        "lightGrey": "#ccd1d9",
                                        "lightRed": "#ed5565",
                                        "primary": "#5d9cec",
                                        "secondary": "#4a89dc",
                                        "white": "#fff",
                                      },
                                      "layout": Object {
                                        "maxWidth": "62.5rem",
                                        "minWidth": "25rem",
                                      },
                                    },
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Home",
                                    "className": "sc-EHOje c3",
                                    "isActive": true,
                                    "onClick": [Function],
                                    "to": "/",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "First",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/first",
                                  },
                                  Object {},
                                ],
                                Array [
                                  Object {
                                    "children": "Second",
                                    "className": "sc-EHOje c4",
                                    "isActive": false,
                                    "onClick": [Function],
                                    "to": "/second",
                                  },
                                  Object {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                                Object {
                                  "isThrow": false,
                                  "value": <span>
                                    mock link
                                  </span>,
                                },
                              ],
                            }
                          }
                          forwardedRef={null}
                          isActive={false}
                          onClick={[Function]}
                          to="/second"
                        >
                          <mockConstructor
                            className="c4"
                            isActive={false}
                            onClick={[Function]}
                            to="/second"
                          >
                            <span>
                              mock link
                            </span>
                          </mockConstructor>
                        </StyledComponent>
                      </Styled(mockConstructor)>
                    </div>
                  </StyledComponent>
                </styled.div>
                <HamburgerComponent
                  isOpen={false}
                  toggleIsOpen={[Function]}
                >
                  <styled.div
                    isOpen={false}
                    onClick={[Function]}
                  >
                    <StyledComponent
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "c5",
                            "rules": Array [
                              "
  align-self: flex-end;
  margin: 14px;
  width: 2rem;
  height: 2rem;
  transform: rotate(0deg);
  transition: 0.25s ease;
  cursor: pointer;
  display: block;

  span:nth-child(1) {
    top: 0;
  }

  span:nth-child(2),
  span:nth-child(3) {
    top: 0.6rem;
  }

  span:nth-child(4) {
    top: 1.2rem;
  }

  ",
                              [Function],
                              ";

  ",
                              "@media (min-width: 62.5rem)",
                              " {
    display: none;
  }
",
                            ],
                          },
                          "displayName": "styled.div",
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isOpen={false}
                      onClick={[Function]}
                    >
                      <div
                        className="c5"
                        onClick={[Function]}
                      >
                        <styled.span
                          isOpen={false}
                        >
                          <StyledComponent
                            forwardedClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "
  display: block;
  position: absolute;
  border-radius: 1.6rem;
  height: 0.2rem;
  width: 100%;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: 0.25s ease-in-out;
  background: ",
                                    [Function],
                                    ";

  ",
                                    "@media (min-width: 48rem)",
                                    " {
    background: ",
                                    [Function],
                                    ";
  }
",
                                  ],
                                },
                                "displayName": "styled.span",
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isOpen={false}
                          >
                            <span
                              className="c6"
                            />
                          </StyledComponent>
                        </styled.span>
                        <styled.span
                          isOpen={false}
                        >
                          <StyledComponent
                            forwardedClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "
  display: block;
  position: absolute;
  border-radius: 1.6rem;
  height: 0.2rem;
  width: 100%;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: 0.25s ease-in-out;
  background: ",
                                    [Function],
                                    ";

  ",
                                    "@media (min-width: 48rem)",
                                    " {
    background: ",
                                    [Function],
                                    ";
  }
",
                                  ],
                                },
                                "displayName": "styled.span",
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isOpen={false}
                          >
                            <span
                              className="c6"
                            />
                          </StyledComponent>
                        </styled.span>
                        <styled.span
                          isOpen={false}
                        >
                          <StyledComponent
                            forwardedClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "
  display: block;
  position: absolute;
  border-radius: 1.6rem;
  height: 0.2rem;
  width: 100%;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: 0.25s ease-in-out;
  background: ",
                                    [Function],
                                    ";

  ",
                                    "@media (min-width: 48rem)",
                                    " {
    background: ",
                                    [Function],
                                    ";
  }
",
                                  ],
                                },
                                "displayName": "styled.span",
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isOpen={false}
                          >
                            <span
                              className="c6"
                            />
                          </StyledComponent>
                        </styled.span>
                        <styled.span
                          isOpen={false}
                        >
                          <StyledComponent
                            forwardedClass={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "
  display: block;
  position: absolute;
  border-radius: 1.6rem;
  height: 0.2rem;
  width: 100%;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: 0.25s ease-in-out;
  background: ",
                                    [Function],
                                    ";

  ",
                                    "@media (min-width: 48rem)",
                                    " {
    background: ",
                                    [Function],
                                    ";
  }
",
                                  ],
                                },
                                "displayName": "styled.span",
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isOpen={false}
                          >
                            <span
                              className="c6"
                            />
                          </StyledComponent>
                        </styled.span>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </HamburgerComponent>
              </div>
            </StyledComponent>
          </styled.div>
        </nav>
      </StyledComponent>
    </styled.nav>
  </Navbar>
</ThemeProvider>
`;

exports[`Navbar Components StyledLink has correct default styles 1`] = `
.c0 {
  display: block;
  color: #fff;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 20px 15px;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  font-size: 14px;
  background-color: transparent;
}

.c0:active,
.c0:hover {
  background-color: #4a89dc;
}

@media (min-width:48rem) {
  .c0 {
    font-size: 16px;
    padding: 20px 25px;
  }
}

<Styled(mockConstructor)
  theme={
    Object {
      "color": Object {
        "black": "#000",
        "darkGreen": "#37bc9b",
        "darkGrey": "#aab2bd",
        "darkRed": "#da4453",
        "lightGreen": "#48cfad",
        "lightGrey": "#ccd1d9",
        "lightRed": "#ed5565",
        "primary": "#5d9cec",
        "secondary": "#4a89dc",
        "white": "#fff",
      },
      "layout": Object {
        "maxWidth": "62.5rem",
        "minWidth": "25rem",
      },
    }
  }
>
  <StyledComponent
    forwardedClass={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "className": "sc-EHOje c0",
              "theme": Object {
                "color": Object {
                  "black": "#000",
                  "darkGreen": "#37bc9b",
                  "darkGrey": "#aab2bd",
                  "darkRed": "#da4453",
                  "lightGreen": "#48cfad",
                  "lightGrey": "#ccd1d9",
                  "lightRed": "#ed5565",
                  "primary": "#5d9cec",
                  "secondary": "#4a89dc",
                  "white": "#fff",
                },
                "layout": Object {
                  "maxWidth": "62.5rem",
                  "minWidth": "25rem",
                },
              },
            },
            Object {},
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": <span>
              mock link
            </span>,
          },
        ],
      }
    }
    forwardedRef={null}
    theme={
      Object {
        "color": Object {
          "black": "#000",
          "darkGreen": "#37bc9b",
          "darkGrey": "#aab2bd",
          "darkRed": "#da4453",
          "lightGreen": "#48cfad",
          "lightGrey": "#ccd1d9",
          "lightRed": "#ed5565",
          "primary": "#5d9cec",
          "secondary": "#4a89dc",
          "white": "#fff",
        },
        "layout": Object {
          "maxWidth": "62.5rem",
          "minWidth": "25rem",
        },
      }
    }
  >
    <mockConstructor
      className="c0"
      theme={
        Object {
          "color": Object {
            "black": "#000",
            "darkGreen": "#37bc9b",
            "darkGrey": "#aab2bd",
            "darkRed": "#da4453",
            "lightGreen": "#48cfad",
            "lightGrey": "#ccd1d9",
            "lightRed": "#ed5565",
            "primary": "#5d9cec",
            "secondary": "#4a89dc",
            "white": "#fff",
          },
          "layout": Object {
            "maxWidth": "62.5rem",
            "minWidth": "25rem",
          },
        }
      }
    >
      <span>
        mock link
      </span>
    </mockConstructor>
  </StyledComponent>
</Styled(mockConstructor)>
`;
